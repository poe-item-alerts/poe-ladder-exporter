name: Deploy

on:
  pull_request:
    types: [closed]
    branches:
      - master
  push:
    branches:
      - master

jobs:

  deploy:
  
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged
    
    steps:
      - name: Checkout
        if: github.event.pull_request.merged  
        uses: actions/checkout@v2
        with:
          ref: master
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.24
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: 'infra'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: 'Build lambda packages'
        run: |
          mkdir -p src/packages
          pip install --system -r src/poe_ladder_exporter/requirements.txt --target src/packages
          cd src/packages && zip -r9 ../poe_ladder_exporter-${GITHUB_SHA}.zip .
          cd ../ && zip -ur poe_ladder_exporter-${GITHUB_SHA}.zip poe_ladder_exporter
          rm -rf packages
          cd ../ && mkdir -p src/packages
          pip install --system -r src/poe_character_exporter/requirements.txt --target src/packages
          cd src/packages && zip -r9 ../poe_character_exporter-${GITHUB_SHA}.zip .
          cd ../ && zip -ur poe_character_exporter-${GITHUB_SHA}.zip poe_character_exporter
          rm -rf packages
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.24
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: 'infra'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_commit_sha: ${{ github.ref }}
      - name: 'Terraform Apply'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.24
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: 'infra'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_commit_sha: ${{ github.ref }}

